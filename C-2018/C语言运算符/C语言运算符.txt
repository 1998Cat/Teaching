1、C语言运算符
    用一些特殊符号完成数学，判断，逻辑，位移操作

2、赋值运算符
    =
    数据类型 变量名 = 变量值;

    int a = 100;
    int b = a; // 100

3、数学运算符
    +
        表示正数
        加法运算
    -
        表示负数
        减法运算
    *
    /
        1）两个整数相除：得到是整数，只保留整数部分，小数部分直接去掉
        2）除数或被除数其中一个为浮点类型值：结果为浮点类型值
    %
        取模（求余数）

4、优先级运算符
    ()，用()，则先做运算

5、增量运算符（自增和自减），优先级高于算术运算符
    ++
    --
    
    a++ => a    a = a + 1
    a-- => a    a = a - 1
    ++a => a = a + 1     a
    --a => a = a - 1     a

    如果增量符号在变量的前面，那么先改变变量的值，再使用变量的值
    如果增量符号在变量的后面，那么先使用变量的值，再改变变量的值

6、算术+赋值  复合运算符
    int b = 5;
    b *= 5;
    += a += b ===> a = a + b;
    -= a -= b ===> a = a - b;
    *= a *= b ===> a = a * b;
    /= a /= b ===> a = a / b;
    %= a %= b ===> a = a % b;

    int a = 1;
    a++; // a += 1;
    a+=2; // 自增2

7、C语言中的真和假
    0：假
    非0: 真，绝大部分情况下用1表示真

8、关系运算符，得到的结果是真或假（1或0）
    >,<,>=,<=,==，!=

9、逻辑运算符
    !  not 非
    &   &&   与  所有条件都为真，最终结果才为真
    |   ||   或  只要一个条件为真，最终结果为真

    int a = 0;
    int b = 10;
    int c = 20;
    **a & b & c; // &, 如果前面得到的结果为假，还继续与后面进行与操作
    a && b && c; // &&，如果前面得到的结果为假，则后面不再继续与操作

    **a | b |c; // |， 所有条件都要参与或操作
    a || b || c; // ||，只要前面有一条条件为真，则后面不再继续或操作

10、二进制的表示

    正数：short a = 6    000000000000 0110
            int b = 6;   00000000000000000000000(29个0)110

    负数：short a = -6;
        原码：正数对应的二进制数 110
        反码：每一个位上取反     001
        补码：在反码上加1        010
        负数：在补码上的高位补1  1010   高位的1表示符号    111111111111 1010

        -15
        原码：1111
        反码: 0000
        补码：0001
        负数：10001

    如果负数的二进制转十进制
        去除符号位，拿出剩下的补码
        反码：补码 - 1
        原码：反码取反
        原码转成十进制，前面加负号

11、位运算符（针对于二进制数据）
    & 与
    | 或
    ^ 异或
    ~ 取反

      10
    & 11
      10
    对应位上的数字都为1，结果为1，否则结果为0
      10
    | 11
      11
    对应位上的数字只要一个为1，结果为1，如果都为0，结果为0

      10
    ^ 11
      01
    同为假，异为真

    ~ 10
      01

      负数的二进制，第一个1表示负数：110   -2   
        补码：10
        反码：01
        原码：10   ---2      -2
    ~ 110
      001
      负数取反，符号位也参与取反操作

    10 >> 1    1，高位补0 
    10 << 1    100，低位补0
    101 >> 1   10，高位补0
    100001 >> 2  1000，高位补0
    正数：右移，则高位补0，左移，低位补0

    负数（-6）：
    1010

    1010 >> 1 101，高位补1
    1010 << 1 10100，低位补0，补码0100，反码：0011，原码：1100    -12

    负数：右移，高位补1，左移，低位补0

12、三目运算符
    ?:
    int a = 5;
    int b;
    b = a > 5 ? 1 : 0; // 对a > 5进行判断，如果结果为真，则把:前面的值赋值给变量b，否则把:后面的值赋值给变量b

13、混合运算中的类型转换
    char
    short
    int
    long
    float
    double

    隐式转换，不需要人为地进行转换：小范围转大范围 
        int a = 10;
        long b = a;
    显式转换，程序代码中使用代码来强制转换

14、运算符优先级问题
    在写代码的过程中，如果会出现优先级的疑惑，请加上()

15、常量
    在程序运行的整个过程中，值不变，并且不能去修改它的值，只能赋初始值
    #define 常量名 常量的值

    1）在#include的后面，在main函数的前面
    2）不需要加分号结束（预编译代码基本都不需要加分号）
    3）常量名的命名规则 
        a、常量名中的单词全部用大写
        b、如果有多个单词，每个单词间用_连接，如CIRCLE_PI, MY_NAME
        c、英文字母，数字，下划线，开头只能是字母或下划线

    可以使用const在代码中定义常量，代码中不要去修改这个值
    const float PI = 3.14;

16、scanf输入函数
    在输入数据前先声明好接收数据的变量
    int a;
    int b;
    scanf("%d", &a);
    scanf("%d,%d", &a, &b); // ,为输入时的分割符，可以自定义，按照%d这种占位符的顺序分别把值放入到后面指定的变量中

17、sizeof函数，获取数据类型或变量所占用的字节数
    int a = 10;
    sizeof(int);
    sizeof(a);