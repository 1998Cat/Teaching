1、数组的基本概念
    数组即数据的组合，把同一种类型的数据放入到一个统一的容器中，每一个数据用索引标识出来，索引的范围从0开始

    用图形的方式描述：有一系列的连续的格子，每一个格子都标上索引，每一个格子里都存放同种类型的数据

    数组注意事项：
        1)数组有大小限制，当使用数组时，需要明确数组的大小
        2）数组如果存放的数据超出了最大存储范围，则出现数组越界（数组溢出）
        3）如果数组的容器大小为10，则索引为0-9，如果去拿索引为10的数据，此时数据是不存在的，是错误的，数组越界
        4）数组里的数据必须是同种数据类型

2、C语言中的数组
    数组的声明：
        数据类型 数组名[数组的长度];
        int a[10];
    数组的引用：
        数组名[索引] = 数据;
        a[0] = 5;
        a[9] = 10;
        数组名[索引];
        a[1];

    数组的定义：
        数据类型 数组名[数组的长度] = {数据0, 数据1, 数据2...};   // 数据的个数与数据的长度保持一致， 数组的长度>=数据的个数

        int a[6] = {1, 2, 3, 4, 5};

        如果数组的长度大于了数据个数，此时即意味着还有某些索引上的值未被初始化，此时这些值会被默认值代替
        short: 0
        int: 0
        long: 0
        float: 0.0f
        double: 0.0
        char: ASCII 0 NUL(空白)

        a[5] : 0

        数据类型 数组名[] = {数据0, 数据1, 数据2}; // 此时数组的长度由数据的个数决定，只有初始化了的数组才能省略长度

        int a[] = {1, 2, 3}; 最大索引为2

    数组的最大索引即为数组长度-1

3、一维数组的遍历操作
    对索引进行循环操作
    int a[10] = {};
    for (int index = 0; index < 10; index++)
    {
        a[index];
    }

4、一维数组与多维数组
    二维数组，即数组的数组，由多个一维数组组成
        数据类型 数组名[多少个一维数组][一维数组的长度];

        数组名[第几个一维数组][一维数组中的索引]; // 范围都是从0开始

        int a[3][5];
        a[1][2];

        a[1][2] = 5;

        数据类型 数组名[多少个一维数组][一维数组的长度] = { {}, {}, {},... };
        
        int a[3][3] = { {1, 2, 3}, {4, 5}, {6} };  // 每一个一维数组中可以不初始化所有元素，没有初始化的部分则使用默认值 

        数据类型 数组名[][一维数组的长度] = { {}, {}, {},... }; // 如果省略掉有多少个一维数组，则必须对整个二维数组进行初始化，否则编译不通过

        int a[][5] = { {1, 2, 3, 4, 5}, {6, 7}};

5、二维数组的遍历
    对索引进行循环操作
    先对行进行循环，对列进行循环
    int a[][3]= { {}, {}, {}, {} };
    for (int i = 0; i < 4; i++)
    {
        for (int j = 0; j < 3; j++)
        {
            a[i][j];
        }
    }